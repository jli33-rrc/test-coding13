# Stage 1: Build the application
FROM node:20 AS builder

# Set the working directory
WORKDIR /li_jenna_ui_garden_build_checks

# Copy package files to install dependencies
COPY package.json package-lock.json ./

# Install dependencies
RUN npm ci

# Copy the entire project to the container
COPY . .

# Build the production version of the app
RUN npm run build

# Stage 2: Serve the production build
FROM node:20 AS runner

# Set the working directory in the container
WORKDIR /li_jenna_ui_garden_build_checks

# Copy the build output from the builder stage
COPY --from=builder /li_jenna_ui_garden_build_checks ./

# Expose the port the app will run on
EXPOSE 8018

# Start the server
CMD ["npm", "run", "start"]

####################

# # Stage 1: Build the application
# FROM node:20 AS builder

# # Set the working directory
# WORKDIR /li_jenna_ui_garden_build_checks

# # Copy package files to install dependencies
# COPY package.json package-lock.json ./

# # Install dependencies
# RUN npm ci

# # Copy the entire project to the container
# COPY . .

# # Build the production version of the app
# RUN npm run build 

# # Stage 2: Serve with NGINX
# FROM nginx:stable-alpine AS runner

# # Copy the build output from the builder stage
# COPY --from=builder /li_jenna_ui_garden_build_checks/out /usr/share/nginx/html

# # Expose the port the app will run on
# EXPOSE 8018

# # Start the NGINX server
# CMD ["nginx", "-g", "daemon off;"]
